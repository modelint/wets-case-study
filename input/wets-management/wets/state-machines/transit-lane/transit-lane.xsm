metadata
    Title : Transit Lane State Machine Diagram
    Author : Michael M. Lee
    Document ID : mint.wets.td.4
    Creation date : May 23, 2025
    Version : 0.5
    Organization : Model Integration, LLC
    Copyright notice > MIT
    Organization logo > mint
domain Wets Management
class Transit Lane
events
    Vessel assigned
    Make adjustments
    Start transfer
    Move complete
    Continue transfer
    Finished transfer
    Adjust complete
    Continue adjustment
--
state Idle
activity
transitions
    Vessel assigned > Assess Water Level
--
state Assess Water Level ()
activity
    // See if the Assigned Vessel's transfer direction is the same as this
    // Transit Lane's Available transfer direction

    (/R4/R2/Vessel.Transfer direction == Available transfer direction)?

    // Same transfer direction, so no water adjustments to do. Start transfer.

        Start transfer -> me :
    
    // Different transfer directions, so we need to:
    //1 - Change the Available transfer direction for this Transit Lane
    Available transfer direction == _up
        Available transfer direction = _down :
        Available transfer direction - _up
    //2 - Get the set of Adjustment Steps to do this
    adjustment step set .. = /R12/Adjustment Step (transit lane : Name, Adjustment direction : Available transfer direction)
    //3 - Get the first step in this set
    starting step .= adjustment step set/OR13/first/~|
    //4 - Create the associative class Active Step
    *Active Step &R12 me, starting step
    //5 - Then go do the Active Step adjustment
    Make adjustments -> me

transitions
    Make adjustments > Adjust Water Level
    Start transfer > Request Gate Move
--
state Request Gate Move ()
activity
    // Get the gate needing to do a move

    move gate .= /R4/R10/Transit Lane Gate

    Move vessel -> move gate
    
transitions
    Move complete > Assess Transfer Complete
--
state Request Gate Adjustment ()
activity
    // Tell the gate for the Active Step to adjust its level.
    Adjust level -> /R12/Adjustment Step/R14/

transitions
    Adjust complete > Assess Adjustment Complete
--
state Assess Adjustment Complete ()
activity
    // 1 - Get the next Transit Lane Gate to be adjusted 
    next step .= /R12/Adjustment Step/OR13/after
    !*/R12/Active Step // Don't need this anymore
    // 2 - Do we have a next step?
    next step?
    //3A - We have a next step create a new Active Step and go do it
    {
        *Active Step & R12 me, next step
        Make adjustments -> me
    } :
    //3B - We don't have a next step, start the transfer
    {   Start transfer -> me}
    
transitions
    Continue adjustment > Request Gate Adjustment
    Start transfer > Request Gate Move
--
state Assess Transfer Complete ()
activity
    // Get the last Transit Lane Gate moved past

    last transit lane gate .= /R4/R10/Transit Lane Gate

    // Get the next Transit Lane Gate in the vessel's transfer direction

    /R4/R2/Vessel.Transfer direction == _up?
    // Going up, next gate will bw upstream
        next transit lane gate .= last transit lane gate/OR7/upstream :  
    //Going down, next gate will be downstream
        next transit lane gate .= last transit lane gate/OR7/downstream 

    // Is there a next transit lane gate or are we finished?

    next transit lane gate?  
    // Yes we have one, relate the vessel to this new gate via R10 and continue transfer
    {
        /R4/Assigned Vessel &R10 next transit lane gate

        Continue transfer -> me
    } :
    {
    // No, we don't have one, the last gate move must have completed the vessel's transfer.
    // Report transfer completed to Wets and return to idle state. 

        Transfer completed (free transit lane : me, completed license : /R4/R2/Vessel.License) -> /R1/Wets
        Finished transfer -> me
    }

transitions
    Continue transfer > Request Gate Move
    Finished transfer > Idle
--
